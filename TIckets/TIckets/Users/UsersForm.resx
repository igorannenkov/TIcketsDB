<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAGAAAABgAAAAAAAAAAAA
        AAD/////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////8+ff////+/v76+vr5+fn7+/v+
        /v7////////////////////////////////////////////////////////////////////////59/Xe
        0sfLt6TAqJGqi2ylh2moiWuujm+0k3O4lnXFqI3VxLP09PT8/Pz/////////////////////////////
        ///////////////////////////////////k2tDErpqri22ujm+xkHGzknKzknKtjW6ykXG7mHe+m3nA
        nHrCnnzEn335+fn+/v7////////V59+Yw7GBtJ9/sZx+rpl9rZmew7O00cXf7Of////////////q4tq3
        m4Cvj3Cqim20k3O2lHS5lna7mHe9mni1k3S8mXjDnnzEoH3GoX7Ion/MqIf+/v7///////////9eqIhd
        podcpYZbooNYnH9Ym35XnH9WmX1Vl3tpoommxbfTx7izkXK1lHO4lXWihGm8mXi+m3nAnHrCnnzEoH69
        m3vBnXvIo3/JpIDLpYHMpoLZvKH///////////////9hro1hrIxgq4tfqYldpYZdo4Vco4VaoYNZn4FY
        nYBPi3Gcj3G7mHe9mni8mXiiiXDDn33FoX/Ho4HJpYPLp4XFo4LEn3zLpYHNp4LOqIPPqIPkzrr/////
        //////////9ttpdjsZBir49iro5grItjqYthqotfqIldpodcpIZVj3aWlXbCnnzEoH26mHirlHvXvqDM
        qIXNqYfOq4nQrIvQrYzCoH/KpYDPqIPQqYTQqYTw5Nj///////////////+Lx65ltJJks5JkspFkr49s
        sZNospJmsJBkro5hrIxgjXaLmHrJpILKpoTAnn6uln3u4srTsY/RrYvSrYvSrYrSrYrLqIjDn33JpIDM
        poHPq4n///////////////////+73s9mtZNltZNks5ForpBxuZptt5hstpdqtJWJv6J2moN4lnnOqojQ
        rIrFo4OxmX727tbp1rrSrYnSrInSrIjSq4fRq4bNqIbGooHFoX7m1sb////////////////////r9fFk
        spFjsZBjro5vtJdruJdsuJdtuJhtuJjj5c1ul35bmX/LrYvSrovFo4KskniXqbZwj66EjprRqobRqoXR
        qoXRqoXRqoXRqoXiyrL///////////////////////////+w18dmspJnspJmtpRntpRot5Vpt5bC2r71
        7dV2noVkqIuVq4vSrIjSrIeegWZBa5o8Yo08Yo1deZm3n4rRqoXRqoXRqoXlz7r/////////////////
        //////////////////+p1sJhrY1ks5JmtpRqtJt5rLmCqMqRscxnln1nspJnr5DPwKTRqoWahXNPZHw2
        WH4zVHk0VnxFZ463n4rTr4zz6eD////////////////////////////////////////////C1c05ZlNF
        dmVpjKRhfpdhfpdbeo5HeGJls5Gp1MH////o4dpVd5tJcptEbphAaJI3W4IzVHlVa4X59O//////////
        ///////////////////////////////////K3eIzTFMfMjgdLjRffZWFpcKKrs6CqMpjkJmlw7b/////
        ///Cz91dgaVZfqNSeJ9IcJpBa5Y4XYRmfpr/////////////////////////////////////////////
        //+HucZenq47XWg7XWmOrMeaudWTtNKKrc18osWAlqHy9PT///+asMdsja5niategaZTeaBEbphBa5ZG
        YX/Ozs7///////////////////////////////////////////9foLFZk6I9YGxXeYimwtuiv9maudWQ
        stCBpshXeI+AkZj///+bscd6mLZzkrFniataf6RKcptBa5ZBaJFLUlrm5ub/////////////////////
        //////////////////9ho7RdlaVlhpejv9atx9+ow9yfvNeTtNKEqcppjKnl6er///+Dn7qEn7t6l7Vs
        jK5egaZNdJxBa5ZBa5ZAXXuenp7///////////////////////////////////////9jpLVgmKeiv9mr
        xd6uyOCpxNyfvdiTtNKGqsubt9L///////+PqMCAnLl3lbRqi61cgKVMc5w/SVRAY4ZAXXtubm7/////
        //////////////////////////////////9jo7Nlnq2DpLuDo7iivtekwNqcutaRstGFqsu0yd3/////
        //+WrcVykrFtja5jhalWfKJIaYo+Pj4+Pj4+Pj5ubm7/////////////////////////////////////
        //+Ku8drqbhNeYdJc4FVfo2NrseVttOMr86DqMquxdb///////+vvs1khqlYdZNTeaBKZIBFTVVJSUlD
        Q0NBQUFxcXH///////////////////////////////////////+6195op7dpoK9lj5xlkJ1bhZRvl654
        oLx2nrxWg5Xp7/H///+dnZ1HR0dJSUlHR0dISEhKSkpLS0tLS0tLS0uDg4P/////////////////////
        ///////////////////1+fpjpLRpp7duqrpxrLtxqbhsnatfkaBbjp5akKDp7/H////b29tXV1dLS0tL
        S0tLS0tLS0tLS0tLS0tLS0vGxsb///////////////////////////////////////////+v0Nhio7Rm
        pbZop7dpp7dnprZkpLVhorPD2+L////////////o6OiDg4NLS0tLS0tLS0tLS0tsbGzGxsb/////////
        ///////////////////////////////////////////D2+J9s8Fho7Rho7Rqp7ebxc/X5+v/////////
        ///////////////////d3d3d3d3/////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        //////////////////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>